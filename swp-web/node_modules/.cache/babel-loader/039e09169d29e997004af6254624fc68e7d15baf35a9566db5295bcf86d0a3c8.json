{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      imageUrl: '',\n      selectedFile: null\n    };\n  },\n  methods: {\n    handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    },\n    getFile(event) {\n      console.log(event);\n      const files = event.target.files;\n      let filename = files[0].name; //只有一个文件\n      if (filename.lastIndexOf('.') <= 0) {\n        return alert(\"Please add a valid image!\"); //判断图片是否有效\n      }\n\n      const fileReader = new FileReader(); //内置方法new FileReader () 读取文件\n      fileReader.addEventListener('load', () => {\n        this.imageUrl = fileReader.result;\n      });\n      fileReader.readAsDataURL(files[0]);\n      this.selectedFile = files[0];\n    },\n    uploadFile() {\n      this.$refs.upload.submit(this.selectedFile);\n    }\n  }\n};","map":{"version":3,"names":["data","imageUrl","selectedFile","methods","handleAvatarSuccess","res","file","URL","createObjectURL","raw","beforeAvatarUpload","isJPG","type","isLt2M","size","$message","error","getFile","event","console","log","files","target","filename","name","lastIndexOf","alert","fileReader","FileReader","addEventListener","result","readAsDataURL","uploadFile","$refs","upload","submit"],"sources":["src/components/PictureLoad.vue"],"sourcesContent":["\r\n<!--<template>-->\r\n<!--  <el-upload class=\"avatar-uploader\" action=\"http://localhost:8090/vwallpaper/upload\" :show-file-list=\"false\"-->\r\n<!--    :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">-->\r\n<!--    <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">-->\r\n<!--    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>-->\r\n<!--  </el-upload>-->\r\n<!--</template>-->\r\n\r\n\r\n<!--<style>-->\r\n<!--.avatar-uploader .el-upload {-->\r\n<!--  border: 1px dashed #d9d9d9;-->\r\n<!--  border-radius: 6px;-->\r\n<!--  cursor: pointer;-->\r\n<!--  position: relative;-->\r\n<!--  overflow: hidden;-->\r\n<!--}-->\r\n\r\n<!--.avatar-uploader .el-upload:hover {-->\r\n<!--  border-color: #409EFF;-->\r\n<!--}-->\r\n\r\n<!--.avatar-uploader-icon {-->\r\n<!--  font-size: 28px;-->\r\n<!--  color: #8c939d;-->\r\n<!--  width: 178px;-->\r\n<!--  height: 178px;-->\r\n<!--  line-height: 178px;-->\r\n<!--  text-align: center;-->\r\n<!--}-->\r\n\r\n<!--.avatar {-->\r\n<!--  width: 178px;-->\r\n<!--  height: 178px;-->\r\n<!--  display: block;-->\r\n<!--}-->\r\n<!--</style>-->\r\n\r\n\r\n<!--<script>-->\r\n<!--export default {-->\r\n<!--  data() {-->\r\n<!--    return {-->\r\n<!--      imageUrl: ''-->\r\n<!--    };-->\r\n<!--  },-->\r\n<!--  methods: {-->\r\n<!--    handleAvatarSuccess(res, file) {-->\r\n<!--      this.imageUrl = URL.createObjectURL(file.raw);-->\r\n<!--    },-->\r\n<!--    beforeAvatarUpload(file) {-->\r\n<!--      const isJPG = file.type === 'image/jpeg';-->\r\n<!--      const isLt2M = file.size / 1024 / 1024 < 2;-->\r\n\r\n<!--      if (!isJPG) {-->\r\n<!--        this.$message.error('上传头像图片只能是 JPG 格式!');-->\r\n<!--      }-->\r\n<!--      if (!isLt2M) {-->\r\n<!--        this.$message.error('上传头像图片大小不能超过 2MB!');-->\r\n<!--      }-->\r\n<!--      return isJPG && isLt2M;-->\r\n<!--    }-->\r\n<!--  }-->\r\n<!--}-->\r\n<!--</script>-->\r\n\r\n\r\n<template>\r\n  <div>\r\n    <el-upload ref=\"upload\" class=\"avatar-uploader\" action=\"http://localhost:8090/vwallpaper/upload\" :show-file-list=\"false\"\r\n               :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\" :on-change=\"getFile\"> <!-- 添加了ref和on-change属性 -->\r\n      <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n    </el-upload>\r\n    <el-button type=\"primary\" @click=\"uploadFile\">上传</el-button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      imageUrl: '',\r\n      selectedFile: null\r\n    };\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return isJPG && isLt2M;\r\n    },\r\n    getFile (event) {\r\n      console.log(event)\r\n      const files = event.target.files\r\n      let filename = files [0].name //只有一个文件\r\n      if ( filename.lastIndexOf ('.') <= 0 ) {\r\n        return alert (\"Please add a valid image!\") //判断图片是否有效\r\n      }\r\n      const fileReader = new FileReader () //内置方法new FileReader () 读取文件\r\n      fileReader.addEventListener ('load', () => {\r\n        this.imageUrl = fileReader.result\r\n      })\r\n      fileReader.readAsDataURL (files [0])\r\n      this.selectedFile = files [0]\r\n    },\r\n    uploadFile () {\r\n      this.$refs.upload.submit(this.selectedFile)\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;;AA+GA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,oBAAAC,GAAA,EAAAC,IAAA;MACA,KAAAL,QAAA,GAAAM,GAAA,CAAAC,eAAA,CAAAF,IAAA,CAAAG,GAAA;IACA;IACAC,mBAAAJ,IAAA;MACA,MAAAK,KAAA,GAAAL,IAAA,CAAAM,IAAA;MACA,MAAAC,MAAA,GAAAP,IAAA,CAAAQ,IAAA;MAEA,KAAAH,KAAA;QACA,KAAAI,QAAA,CAAAC,KAAA;MACA;MACA,KAAAH,MAAA;QACA,KAAAE,QAAA,CAAAC,KAAA;MACA;MACA,OAAAL,KAAA,IAAAE,MAAA;IACA;IACAI,QAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA,MAAAG,KAAA,GAAAH,KAAA,CAAAI,MAAA,CAAAD,KAAA;MACA,IAAAE,QAAA,GAAAF,KAAA,IAAAG,IAAA;MACA,IAAAD,QAAA,CAAAE,WAAA;QACA,OAAAC,KAAA;MACA;;MACA,MAAAC,UAAA,OAAAC,UAAA;MACAD,UAAA,CAAAE,gBAAA;QACA,KAAA5B,QAAA,GAAA0B,UAAA,CAAAG,MAAA;MACA;MACAH,UAAA,CAAAI,aAAA,CAAAV,KAAA;MACA,KAAAnB,YAAA,GAAAmB,KAAA;IACA;IACAW,WAAA;MACA,KAAAC,KAAA,CAAAC,MAAA,CAAAC,MAAA,MAAAjC,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}