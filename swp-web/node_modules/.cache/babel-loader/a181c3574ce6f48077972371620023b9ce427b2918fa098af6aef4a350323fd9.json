{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AppRegister',\n  data() {\n    return {\n      name: '',\n      password: '',\n      pname: '',\n      ppassword: ''\n    };\n  },\n  methods: {\n    register() {\n      if (this.name == \"\") {\n        alert(\"请输入账号\");\n        location.reload();\n      } else if (this.pname == \"\") {\n        alert(\"请输入用户名\");\n        location.reload();\n      } else if (this.password == \"\") {\n        alert(\"请输入密码\");\n        location.reload();\n      } else if (this.password != this.ppassword) {\n        alert(\"两次输入密码不一致\");\n        location.reload();\n      } else {\n        let user = {\n          userId: this.name,\n          name: this.pname,\n          password: this.password,\n          balance: '0'\n        };\n        let self = this;\n        this.$axios.post('http://localhost:8090/user/register', user).then(function (response) {\n          let result = response.data;\n          if (result.code === 200) {\n            console.log(\"登录成功！\");\n            console.log(\"返回的数据：\", result.data);\n            console.log(\"总记录数：\", result.total);\n            self.$router.push(\"/index\");\n          } else if (result.code === 400) {\n            console.log(\"登录失败！\");\n            alert(\"该账号已被使用\");\n            location.reload();\n          }\n        }).catch(function (error) {\n          console.log(\"请求错误：\", error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","password","pname","ppassword","methods","register","alert","location","reload","user","userId","balance","self","$axios","post","then","response","result","code","console","log","total","$router","push","catch","error"],"sources":["src/components/AppRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"background\">\r\n        <div class=\"box\">\r\n            <h2>用户注册</h2>\r\n            <div class=\"input-box\">\r\n                <label>账号</label>\r\n                <input type=\"text\" v-model=\"name\">\r\n            </div>\r\n            <div class=\"input-box\">\r\n                <label>用户名</label>\r\n                <input type=\"text\" v-model=\"pname\">\r\n            </div>\r\n            <div class=\"input-box\">\r\n                <label>密码</label>\r\n                <input type=\"password\" v-model=\"password\">\r\n            </div>\r\n            <div class=\"input-box\">\r\n                <label>确认密码</label>\r\n                <input type=\"password\" v-model=\"ppassword\">\r\n            </div>\r\n            <div class=\"btn-box\">\r\n                <div>\r\n                    <button @click=\"register\">注册</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\n\r\nexport default {\r\n    name: 'AppRegister',\r\n    data() {\r\n        return {\r\n            name: '',\r\n            password: '',\r\n            pname: '',\r\n            ppassword: ''\r\n        }\r\n    },\r\n    methods: {\r\n        register() {\r\n            if (this.name == \"\") {\r\n                alert(\"请输入账号\")\r\n                location.reload();\r\n            }\r\n            else if (this.pname == \"\") {\r\n                alert(\"请输入用户名\")\r\n                location.reload();\r\n            }\r\n            else if (this.password == \"\") {\r\n                alert(\"请输入密码\")\r\n                location.reload();\r\n            }\r\n            else if (this.password != this.ppassword) {\r\n                alert(\"两次输入密码不一致\")\r\n                location.reload();\r\n            }\r\n            else {\r\n                let user = {\r\n                    userId: this.name,\r\n                    name: this.pname,\r\n                    password: this.password,\r\n                    balance: '0'\r\n                };\r\n\r\n                let self = this;\r\n                this.$axios.post('http://localhost:8090/user/register', user)\r\n                    .then(function (response) {\r\n                        let result = response.data;\r\n                        if (result.code === 200) {\r\n                            console.log(\"登录成功！\");\r\n                            console.log(\"返回的数据：\", result.data);\r\n                            console.log(\"总记录数：\", result.total);\r\n                            self.$router.push(\"/index\");\r\n                        } else if (result.code === 400) {\r\n                            console.log(\"登录失败！\");\r\n                            alert(\"该账号已被使用\");\r\n                            location.reload();\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(\"请求错误：\", error);\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n@charset \"utf-8\";\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.background {\r\n    height: 100vh;\r\n    background: url(../assets/login_back.jpg) no-repeat;\r\n    background-size: cover;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n/*  */\r\n.box {\r\n    width: 350px;\r\n    height: 400px;\r\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n    /* 在盒子的顶部添加一个1像素宽的边框，颜色为白色，透明度为50%。 */\r\n    border-left: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.3);\r\n    backdrop-filter: blur(10px);\r\n    /* 对盒子应用一个模糊半透明的效果，模糊半径为10像素。这样可以创建玻璃模糊的效果，模糊盒子后面的内容。 */\r\n    background: rgba(50, 50, 50, 0.2);\r\n    /* 设置盒子的背景颜色为半透明的深灰色（RGB值为50, 50, 50），透明度为20%。 */\r\n    display: flex;\r\n    /* 设置盒子使用Flexbox布局。 */\r\n    flex-direction: column;\r\n    /* 将Flex容器的主轴方向设置为垂直，使得项目在列方向上排列。 */\r\n    justify-content: center;\r\n    /*  在盒子的垂直方向上居中内容。 */\r\n    align-items: center;\r\n    /* 在盒子的水平方向上居中内容。 */\r\n    border-radius: 10px;\r\n    /* 应用一个10像素的圆角，使得盒子的角变得圆滑。 */\r\n    margin-top: 100px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n\r\n.box>h2 {\r\n    color: rgba(255, 255, 255, 0.9);\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.box .input-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n    /*设置所选 <h2> 元素的底部外边距为30像素。这将在 <h2> 元素的下方留出 30 像素的空间。 */\r\n}\r\n\r\n.box .input-box label {\r\n    font-size: 13px;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.box .input-box input {\r\n    letter-spacing: 1px;\r\n    font-size: 14px;\r\n    box-sizing: border-box;\r\n    width: 250px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background: rgba(255, 255, 255, 0.2);\r\n    outline: none;\r\n    padding: 0 12px;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    transition: 0.2s;\r\n}\r\n\r\n.box .input-box input:focus {\r\n    border: 1px solid rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.box .btn-box {\r\n    width: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n}\r\n\r\n.box .btn-box>a {\r\n    outline: none;\r\n    display: block;\r\n    width: 250px;\r\n    text-align: end;\r\n    text-decoration: none;\r\n    font-size: 13px;\r\n    color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.box .btn-box>a:hover {\r\n    /* 悬停状态 */\r\n    color: rgba(255, 255, 255, 1);\r\n}\r\n\r\n.box .btn-box>div {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.box .btn-box>div>button {\r\n    cursor: pointer;\r\n    outline: none;\r\n    margin-top: 10px;\r\n    margin-left: 60px;\r\n    /* display: block; */\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    transition: 0.2s;\r\n}\r\n\r\n.box .btn-box>div>button:nth-of-type(1) {\r\n    width: 120px;\r\n    height: 35px;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    border: 1px solid rgba(192, 119, 91, 0.7);\r\n    background: rgba(192, 119, 91, 0.5);\r\n}\r\n\r\n.box .btn-box>div>button:nth-of-type(2) {\r\n    width: 120px;\r\n    height: 35px;\r\n    margin-left: 10px;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    border: 1px solid rgba(192, 119, 91, 0.7);\r\n    background: rgba(192, 119, 91, 0.5);\r\n}\r\n\r\n.box .btn-box>div>button:hover {\r\n    border: 1px solid rgba(251, 128, 71, 0.7);\r\n    background: rgba(251, 128, 71, 0.5);\r\n}</style>\r\n    \r\n    "],"mappings":";AA+BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAD,IAAA;MACAE,QAAA;MACAC,KAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,SAAAN,IAAA;QACAO,KAAA;QACAC,QAAA,CAAAC,MAAA;MACA,OACA,SAAAN,KAAA;QACAI,KAAA;QACAC,QAAA,CAAAC,MAAA;MACA,OACA,SAAAP,QAAA;QACAK,KAAA;QACAC,QAAA,CAAAC,MAAA;MACA,OACA,SAAAP,QAAA,SAAAE,SAAA;QACAG,KAAA;QACAC,QAAA,CAAAC,MAAA;MACA,OACA;QACA,IAAAC,IAAA;UACAC,MAAA,OAAAX,IAAA;UACAA,IAAA,OAAAG,KAAA;UACAD,QAAA,OAAAA,QAAA;UACAU,OAAA;QACA;QAEA,IAAAC,IAAA;QACA,KAAAC,MAAA,CAAAC,IAAA,wCAAAL,IAAA,EACAM,IAAA,WAAAC,QAAA;UACA,IAAAC,MAAA,GAAAD,QAAA,CAAAhB,IAAA;UACA,IAAAiB,MAAA,CAAAC,IAAA;YACAC,OAAA,CAAAC,GAAA;YACAD,OAAA,CAAAC,GAAA,WAAAH,MAAA,CAAAjB,IAAA;YACAmB,OAAA,CAAAC,GAAA,UAAAH,MAAA,CAAAI,KAAA;YACAT,IAAA,CAAAU,OAAA,CAAAC,IAAA;UACA,WAAAN,MAAA,CAAAC,IAAA;YACAC,OAAA,CAAAC,GAAA;YACAd,KAAA;YACAC,QAAA,CAAAC,MAAA;UACA;QACA,GACAgB,KAAA,WAAAC,KAAA;UACAN,OAAA,CAAAC,GAAA,UAAAK,KAAA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}