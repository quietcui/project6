{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 在数据中定义一个包含图片名称的数组\n      imageNames: ['image1.jpg', 'image2.jpg', 'image3.jpg' /* 添加更多图片名称 */]\n    };\n  },\n\n  methods: {\n    // 辅助方法，根据图片名称获取完整的图片URL\n    getImageUrl(imageName) {\n      return `http://localhost:8090/vwallpaper/ShowPicture?filepath=${imageName}`;\n    }\n  }\n};","map":{"version":3,"names":["data","imageNames","methods","getImageUrl","imageName"],"sources":["src/components/PictureLoad2.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-viewer\">\r\n    <el-button type=\"primary\" @click=\"postImageName\">获取图片</el-button>\r\n\r\n    for(i=0;i<=10;i++){\r\n\r\n    this.imageName = response.data.data[i].path;\r\n    <el-image v-if=\"imageName\" :src=\"`http://localhost:8090/vwallpaper/ShowPicture?filepath=${imageName}`\" fit=\"contain\"></el-image>\r\n  }\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"ImageViewer\",\r\n  data() {\r\n    return {\r\n      imageName: \"\", //用于保存图片的文件名\r\n      imageName1:\"\",\r\n    };\r\n  },\r\n  methods: {\r\n    //定义一个方法，用于从后端获取图片的文件名\r\n    async postImageName() {\r\n      let vwallpaper = {\r\n\r\n        vwpId:'' ,\r\n        name:'',\r\n        createId:'',\r\n        price:'',\r\n        type:'风景',\r\n        path:''\r\n\r\n      };\r\n      try {\r\n        //使用axios发送一个GET请求，假设后端有一个接口可以返回图片的文件名\r\n        let response = await axios.post(\"http://localhost:8090/vwallpaper/getImagesByTypeAndName\",vwallpaper);\r\n        //如果请求成功，将文件名保存到imageName属性中\r\n        if (response.status === 200) {\r\n          this.imageName = response.data.data[0].path;\r\n          this.imageName1 = response.data.data[1].path;\r\n          console.log(response.data);\r\n          console.log(this.imageName);\r\n        }\r\n      } catch (error) {\r\n        //如果请求失败，打印错误信息\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-viewer {\r\n  width: 600px;\r\n  height: 400px;\r\n  margin: 20px auto;\r\n  border: 1px solid #ccc;\r\n}\r\n</style>\r\n\r\n\r\n\r\n<template>\r\n  <div>\r\n    <!-- 使用 v-for 循环渲染多个图片 -->\r\n    <el-image v-for=\"(imageName, index) in imageNames\" :key=\"index\" :src=\"getImageUrl(imageName)\" fit=\"contain\"></el-image>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 在数据中定义一个包含图片名称的数组\r\n      imageNames: ['image1.jpg', 'image2.jpg', 'image3.jpg', /* 添加更多图片名称 */]\r\n    };\r\n  },\r\n  methods: {\r\n    // 辅助方法，根据图片名称获取完整的图片URL\r\n    getImageUrl(imageName) {\r\n      return `http://localhost:8090/vwallpaper/ShowPicture?filepath=${imageName}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAyEA;EACAA,KAAA;IACA;MACA;MACAC,UAAA;IACA;EACA;;EACAC,OAAA;IACA;IACAC,YAAAC,SAAA;MACA,gEAAAA,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}